# Nginx configuration optimized for production deployment on Dokploy
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Server tokens off for security
    server_tokens off;

    # Enable gzip compression with optimized settings for maximum performance
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        text/cache-manifest
        application/javascript
        application/x-javascript
        application/xml+rss
        application/json
        application/xml
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        font/truetype
        font/opentype
        font/eot
        font/woff
        font/woff2;

    # Comprehensive security headers for production
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    
    # Enhanced Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://backend:5000 ws://backend:5000; frame-ancestors 'self';" always;
    
    # HSTS header for HTTPS (will be ignored on HTTP)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # Health check endpoint for Dokploy monitoring
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Handle client-side routing with optimized caching
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache HTML files for short duration
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "public, no-cache, must-revalidate";
        }
    }

    # Setup proxy cache for API responses
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    
    # API proxy to backend with enhanced caching and performance settings
    location /api/ {
        # Rate limiting for API requests
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeout settings optimized for Dokploy environment
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enhanced buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        proxy_temp_file_write_size 64k;
        
        # Intelligent API response caching
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        # Cache only GET requests for read-only endpoints
        proxy_cache_methods GET HEAD;
        
        # Add cache status headers for debugging
        add_header X-Cache-Status $upstream_cache_status always;
        add_header X-Cache-Key "$scheme$request_method$host$request_uri" always;
        
        # Don't cache authentication and mutation endpoints
        location ~* /api/(auth|login|logout) {
            proxy_pass http://backend:5000;
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }
        
        # Don't cache POST/PUT/DELETE requests
        location ~* /api/.* {
            if ($request_method !~ ^(GET|HEAD)$) {
                set $no_cache 1;
            }
            proxy_cache_bypass $no_cache;
            proxy_no_cache $no_cache;
        }
    }

    # Optimized static asset caching with performance enhancements
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif|map)$ {
        limit_req zone=static burst=50 nodelay;
        
        # Long-term caching for versioned assets
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary "Accept-Encoding";
        
        # Enable efficient file serving with optimizations
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        tcp_nodelay on;
        
        # Enable pre-compressed files
        gzip_static on;
        
        # Enable open file cache for frequently accessed files
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;
        
        # Add performance headers
        add_header X-Cache-Status "HIT" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Separate handling for source maps (shorter cache)
    location ~* \.map$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        access_log off;
    }
    
    # Optimize font files specifically
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Access-Control-Allow-Origin "*";
        add_header Vary "Accept-Encoding";
        
        # Font-specific optimizations
        sendfile on;
        tcp_nopush on;
        gzip_static on;
    }

    # Favicon handling
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Robots.txt handling
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # Security: Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Block access to backup files
    location ~* \.(bak|backup|old|orig|save|swo|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages with proper caching
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        expires 5m;
        add_header Cache-Control "public, no-cache";
    }

    # Logging configuration
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}

